# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import groupDB_pb2 as groupDB__pb2


class databaseStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.addGroup = channel.unary_unary(
        '/database/addGroup',
        request_serializer=groupDB__pb2.addGroupRequest.SerializeToString,
        response_deserializer=groupDB__pb2.addGroupReply.FromString,
        )
    self.deleteGroup = channel.unary_unary(
        '/database/deleteGroup',
        request_serializer=groupDB__pb2.deleteGroupRequest.SerializeToString,
        response_deserializer=groupDB__pb2.deleteGroupReply.FromString,
        )
    self.getGroupId = channel.unary_unary(
        '/database/getGroupId',
        request_serializer=groupDB__pb2.getGroupRequest.SerializeToString,
        response_deserializer=groupDB__pb2.getGroupReply.FromString,
        )
    self.removeAll = channel.unary_unary(
        '/database/removeAll',
        request_serializer=groupDB__pb2.removeAllRequest.SerializeToString,
        response_deserializer=groupDB__pb2.removeAllReply.FromString,
        )


class databaseServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def addGroup(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteGroup(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getGroupId(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def removeAll(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_databaseServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'addGroup': grpc.unary_unary_rpc_method_handler(
          servicer.addGroup,
          request_deserializer=groupDB__pb2.addGroupRequest.FromString,
          response_serializer=groupDB__pb2.addGroupReply.SerializeToString,
      ),
      'deleteGroup': grpc.unary_unary_rpc_method_handler(
          servicer.deleteGroup,
          request_deserializer=groupDB__pb2.deleteGroupRequest.FromString,
          response_serializer=groupDB__pb2.deleteGroupReply.SerializeToString,
      ),
      'getGroupId': grpc.unary_unary_rpc_method_handler(
          servicer.getGroupId,
          request_deserializer=groupDB__pb2.getGroupRequest.FromString,
          response_serializer=groupDB__pb2.getGroupReply.SerializeToString,
      ),
      'removeAll': grpc.unary_unary_rpc_method_handler(
          servicer.removeAll,
          request_deserializer=groupDB__pb2.removeAllRequest.FromString,
          response_serializer=groupDB__pb2.removeAllReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'database', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
